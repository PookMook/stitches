{"version":3,"file":"utils.js","sourceRoot":"","sources":["../src/utils.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  animation,\n  background,\n  border,\n  borderBottom,\n  borderColor,\n  borderLeft,\n  borderRadius,\n  borderRight,\n  borderStyle,\n  borderTop,\n  borderWidth,\n  boxShadow,\n  font,\n  margin,\n  padding,\n  transition,\n} from \"./shorthand-parser\";\nimport { IBreakpoints, ICssPropToToken, ISheet } from \"./types\";\n\nexport const MAIN_BREAKPOINT_ID = \"initial\";\nexport type TMainBreakPoint = typeof MAIN_BREAKPOINT_ID;\n\nexport const cssPropToToken: ICssPropToToken<any> = {\n  gap: \"space\",\n  gridGap: \"space\",\n  columnGap: \"space\",\n  gridColumnGap: \"space\",\n  rowGap: \"space\",\n  gridRowGap: \"space\",\n  inset: \"space\",\n  insetBlock: \"space\",\n  insetBlockEnd: \"space\",\n  insetBlockStart: \"space\",\n  insetInline: \"space\",\n  insetInlineEnd: \"space\",\n  insetInlineStart: \"space\",\n  margin: \"space\",\n  marginTop: \"space\",\n  marginRight: \"space\",\n  marginBottom: \"space\",\n  marginLeft: \"space\",\n  marginBlock: \"space\",\n  marginBlockEnd: \"space\",\n  marginBlockStart: \"space\",\n  marginInline: \"space\",\n  marginInlineEnd: \"space\",\n  marginInlineStart: \"space\",\n  padding: \"space\",\n  paddingTop: \"space\",\n  paddingRight: \"space\",\n  paddingBottom: \"space\",\n  paddingLeft: \"space\",\n  paddingBlock: \"space\",\n  paddingBlockEnd: \"space\",\n  paddingBlockStart: \"space\",\n  paddingInline: \"space\",\n  paddingInlineEnd: \"space\",\n  paddingInlineStart: \"space\",\n  top: \"space\",\n  right: \"space\",\n  bottom: \"space\",\n  left: \"space\",\n  fontSize: \"fontSizes\",\n  backgroundColor: \"colors\",\n  border: [\"\", \"borderStyles\", \"colors\"],\n  borderColor: \"colors\",\n  borderTopColor: \"colors\",\n  borderRightColor: \"colors\",\n  borderBottomColor: \"colors\",\n  borderLeftColor: \"colors\",\n  caretColor: \"colors\",\n  color: \"colors\",\n  columnRuleColor: \"colors\",\n  outlineColor: \"colors\",\n  fill: \"colors\",\n  stroke: \"colors\",\n  fontFamily: \"fonts\",\n  fontWeight: \"fontWeights\",\n  lineHeight: \"lineHeights\",\n  letterSpacing: \"letterSpacings\",\n  blockSize: \"sizes\",\n  minBlockSize: \"sizes\",\n  maxBlockSize: \"sizes\",\n  inlineSize: \"sizes\",\n  minInlineSize: \"sizes\",\n  maxInlineSize: \"sizes\",\n  width: \"sizes\",\n  minWidth: \"sizes\",\n  maxWidth: \"sizes\",\n  height: \"sizes\",\n  minHeight: \"sizes\",\n  maxHeight: \"sizes\",\n  flexBasis: \"sizes\",\n  borderWidth: \"borderWidths\",\n  borderTopWidth: \"borderWidths\",\n  borderLeftWidth: \"borderWidths\",\n  borderRightWidth: \"borderWidths\",\n  borderBottomWidth: \"borderWidths\",\n  borderStyle: \"borderStyles\",\n  borderTopStyle: \"borderStyles\",\n  borderLeftStyle: \"borderStyles\",\n  borderRightStyle: \"borderStyles\",\n  borderBottomStyle: \"borderStyles\",\n  borderRadius: \"radii\",\n  borderTopLeftRadius: \"radii\",\n  borderTopRightRadius: \"radii\",\n  borderBottomRightRadius: \"radii\",\n  borderBottomLeftRadius: \"radii\",\n  boxShadow: \"shadows\",\n  textShadow: \"shadows\",\n  zIndex: \"zIndices\",\n  transition: \"transitions\",\n};\n\nexport const tokenTypes = [\n  \"sizes\",\n  \"colors\",\n  \"space\",\n  \"fontSizes\",\n  \"lineHeights\",\n  \"fontWeights\",\n  \"fonts\",\n  \"borderWidths\",\n  \"radii\",\n] as const;\n\nconst enhanceSheet = (sheet: ISheet): ISheet => {\n  return {\n    content: sheet.content,\n    cssRules: sheet.cssRules,\n    insertRule: (rule) => {\n      try {\n        const newIndex = sheet.insertRule(\n          rule,\n          rule.startsWith(\"@\") ? sheet.cssRules.length : 0\n        );\n        return newIndex;\n      } catch {\n        return -1;\n      }\n    },\n  };\n};\n\nexport const createSheets = (env: any, screens: IBreakpoints = {}) => {\n  const tags: HTMLStyleElement[] = [];\n  if (env && env.document) {\n    const head = env.document.querySelector(\"head\");\n\n    if (!head) {\n      throw new Error(\"There is no HEAD element on this document\");\n    }\n\n    const styles = Array.from<HTMLStyleElement>(head.querySelectorAll(\"style\"));\n    const existingStyles = styles.filter((style) =>\n      Boolean(style.textContent && style.textContent.startsWith(\"/* STITCHES\"))\n    );\n\n    return {\n      tags,\n      sheets: [\"__variables__\", MAIN_BREAKPOINT_ID]\n        .concat(Object.keys(screens))\n        .reduce<{ [key: string]: ISheet }>((aggr, key, index) => {\n          let style = existingStyles[index];\n          if (!style) {\n            style = env.document.createElement(\"style\");\n            head.appendChild(style);\n          }\n          tags.push(style);\n          for (let x = 0; x < document.styleSheets.length; x++) {\n            if (document.styleSheets[x].ownerNode === style) {\n              aggr[key] = enhanceSheet(document.styleSheets[x] as any);\n              break;\n            }\n          }\n\n          return aggr;\n        }, {}),\n    };\n  }\n\n  return {\n    tags,\n    sheets: [\"__variables__\", MAIN_BREAKPOINT_ID]\n      .concat(Object.keys(screens))\n      .reduce<{ [key: string]: ISheet }>((aggr, key) => {\n        aggr[key] = enhanceSheet({\n          content: \"\",\n          cssRules: [],\n          insertRule(content, index = 0) {\n            this.cssRules.splice(index, 0, content);\n          },\n        });\n\n        return aggr;\n      }, {}),\n  };\n};\n\nexport const specificityProps: {\n  [key: string]: any;\n} = {\n  border,\n  boxShadow,\n  flex: (tokens: any, value: any) => {\n    if (Array.isArray(value)) {\n      if (value.length === 2) {\n        return {\n          flexGrow: value[0],\n          ...(isNaN(value[1])\n            ? { flexBasis: value[1] }\n            : { flexShrink: value[1] }),\n        };\n      }\n      if (value.length === 3) {\n        return {\n          flexGrow: value[0],\n          flexShrink: value[1],\n          flexBasis: value[2],\n        };\n      }\n    }\n\n    return isNaN(value)\n      ? {\n          flexBasis: value,\n        }\n      : {\n          flexGrow: value,\n        };\n  },\n  overflow: (tokens: any, value: any) => ({\n    overflowX: value,\n    overflowY: value,\n  }),\n  margin,\n  padding,\n  borderRadius,\n  borderColor,\n  borderStyle,\n  borderWidth,\n  background,\n  animation,\n  transition,\n  font,\n  borderBottom,\n  borderLeft,\n  borderTop,\n  borderRight,\n};\n\nexport const getVendorPrefixAndProps = (env: any) => {\n  const styles = env.getComputedStyle(env.document.documentElement);\n  const vendorProps = Array.from(styles).filter(\n    (prop) => (prop as string)[0] === \"-\"\n  );\n  // @ts-ignore\n  const vendorPrefix = (vendorProps.join(\"\").match(/-(moz|webkit|ms)-/) ||\n    (styles.OLink === \"\" && [\"\", \"o\"]))[1];\n\n  return { vendorPrefix: `-${vendorPrefix}-`, vendorProps };\n};\n\nexport const hashString = (str: string) => {\n  let hash = 5381;\n  let i = str.length;\n\n  while (i) {\n    hash = (hash * 33) ^ str.charCodeAt(--i);\n  }\n\n  /* JavaScript does bitwise operations (like XOR, above) on 32-bit signed\n   * integers. Since we want the results to be always positive, convert the\n   * signed int to an unsigned by doing an unsigned bitshift. */\n  return generateAlphabeticName(hash >>> 0);\n};\n\n/**\n * Converts a hash number to alphabetic representation:\n * Copied from:\n * https://github.com/styled-components/styled-components/blob/master/packages/styled-components/src/utils/generateAlphabeticName.js\n */\n\nconst AD_REPLACER_R = /(a)(d)/gi;\n\n/* This is the \"capacity\" of our alphabet i.e. 2x26 for all letters plus their capitalised\n * counterparts */\nconst charsLength = 52;\n\n/* start at 75 for 'a' until 'z' (25) and then start at 65 for capitalised letters */\nconst getAlphabeticChar = (code: number): string =>\n  String.fromCharCode(code + (code > 25 ? 39 : 97));\n\n/* input a number, usually a hash and convert it to base-52 */\nfunction generateAlphabeticName(code: number): string {\n  let name = \"\";\n  let x;\n\n  /* get a char and divide by alphabet-length */\n  for (x = Math.abs(code); x > charsLength; x = (x / charsLength) | 0) {\n    name = getAlphabeticChar(x % charsLength) + name;\n  }\n\n  return (getAlphabeticChar(x % charsLength) + name).replace(\n    AD_REPLACER_R,\n    \"$1-$2\"\n  );\n}\n"]}