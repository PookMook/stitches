{"version":3,"file":"types.js","sourceRoot":"","sources":["../src/types.ts"],"names":[],"mappings":";;;AAYa,QAAA,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC","sourcesContent":["import {\n  Color,\n  FlexProperty,\n  LineStyle,\n  LineWidth,\n  Properties,\n} from \"./css-types\";\n\nexport interface IBreakpoints {\n  [key: string]: (css: string) => string;\n}\n\nexport const ATOM = Symbol(\"ATOM\");\n\nexport interface IAtom {\n  id: string;\n  cssHyphenProp: string;\n  value: string;\n  selector: string;\n  breakpoint: string;\n  _isGlobal?: boolean;\n  inlineMediaQueries: string[];\n  _className?: string;\n  toString: (this: IAtom) => string;\n  [ATOM]: true;\n}\n\nexport interface IThemeAtom {\n  name: string;\n  definition: ITokensDefinition;\n  toString: (this: IThemeAtom) => string;\n  [ATOM]: true;\n}\n\nexport interface IComposedAtom {\n  atoms: IAtom[];\n  _className?: string;\n  toString: (this: IComposedAtom) => string;\n  [ATOM]: true;\n}\n\nexport interface IKeyframesAtom {\n  id: string;\n  _cssRuleString?: string;\n  toString: (this: IKeyframesAtom) => string;\n  [ATOM]: true;\n}\n\nexport type TTopCss<T extends TConfig> = {\n  [K in keyof Properties]?: K extends keyof ICssPropToToken<T>\n    ? ICssPropToToken<T>[K] | number | Properties[K]\n    : Properties[K] | number;\n};\n\nexport type TRecursiveCss<T extends TConfig> =\n  | TTopCss<T>\n  | {\n      [selector: string]: TRecursiveCss<T>;\n    };\n\nexport type TFlatCSS<\n  T extends TConfig,\n  D = {\n    [K in keyof Properties]?: K extends keyof ICssPropToToken<T>\n      ? ICssPropToToken<T>[K] | Properties[K]\n      : Properties[K];\n  }\n> = D;\n\nexport type TFlatUtils<\n  T extends TConfig,\n  UT = {\n    [U in keyof T[\"utils\"]]?: T[\"utils\"][U] extends TUtility<any, any>\n      ? ReturnType<T[\"utils\"][U]> extends (arg: infer A) => {}\n        ? A\n        : never\n      : never;\n  }\n> = UT;\n\nexport type TTopUtils<T extends TConfig> = {\n  [U in keyof T[\"utils\"]]?: T[\"utils\"][U] extends TUtility<any, any>\n    ? ReturnType<T[\"utils\"][U]> extends (arg: infer A) => {}\n      ? A\n      : never\n    : never;\n};\n\nexport type TRecursiveUtils<T extends TConfig> =\n  | TTopUtils<T>\n  | {\n      [pseudo: string]: TRecursiveUtils<T>;\n    };\n\nexport type TUtility<A extends any, T extends TConfig> = (\n  config: T\n) => (arg: A) => TRecursiveCss<T>;\n\nexport type ICssPropToToken<T extends TConfig> = T[\"tokens\"] extends object\n  ? {\n      gap: T[\"tokens\"][\"space\"] extends object\n        ? keyof T[\"tokens\"][\"space\"]\n        : never;\n      gridGap: T[\"tokens\"][\"space\"] extends object\n        ? keyof T[\"tokens\"][\"space\"]\n        : never;\n      columnGap: T[\"tokens\"][\"space\"] extends object\n        ? keyof T[\"tokens\"][\"space\"]\n        : never;\n      gridColumnGap: T[\"tokens\"][\"space\"] extends object\n        ? keyof T[\"tokens\"][\"space\"]\n        : never;\n      rowGap: T[\"tokens\"][\"space\"] extends object\n        ? keyof T[\"tokens\"][\"space\"]\n        : never;\n      gridRowGap: T[\"tokens\"][\"space\"] extends object\n        ? keyof T[\"tokens\"][\"space\"]\n        : never;\n      inset: T[\"tokens\"][\"colors\"] extends object\n        ? keyof T[\"tokens\"][\"colors\"]\n        : never;\n      insetBlock: T[\"tokens\"][\"colors\"] extends object\n        ? keyof T[\"tokens\"][\"colors\"]\n        : never;\n      insetBlockEnd: T[\"tokens\"][\"colors\"] extends object\n        ? keyof T[\"tokens\"][\"colors\"]\n        : never;\n      insetBlockStart: T[\"tokens\"][\"colors\"] extends object\n        ? keyof T[\"tokens\"][\"colors\"]\n        : never;\n      insetInline: T[\"tokens\"][\"colors\"] extends object\n        ? keyof T[\"tokens\"][\"colors\"]\n        : never;\n      insetInlineEnd: T[\"tokens\"][\"colors\"] extends object\n        ? keyof T[\"tokens\"][\"colors\"]\n        : never;\n      insetInlineStart: T[\"tokens\"][\"colors\"] extends object\n        ? keyof T[\"tokens\"][\"colors\"]\n        : never;\n      margin: T[\"tokens\"][\"space\"] extends object\n        ?\n            | keyof T[\"tokens\"][\"space\"]\n            | [keyof T[\"tokens\"][\"space\"], keyof T[\"tokens\"][\"space\"]]\n            | [\n                keyof T[\"tokens\"][\"space\"],\n                keyof T[\"tokens\"][\"space\"],\n                keyof T[\"tokens\"][\"space\"]\n              ]\n            | [\n                keyof T[\"tokens\"][\"space\"],\n                keyof T[\"tokens\"][\"space\"],\n                keyof T[\"tokens\"][\"space\"],\n                keyof T[\"tokens\"][\"space\"]\n              ]\n        : never;\n      marginTop: T[\"tokens\"][\"space\"] extends object\n        ? keyof T[\"tokens\"][\"space\"]\n        : never;\n      marginRight: T[\"tokens\"][\"space\"] extends object\n        ? keyof T[\"tokens\"][\"space\"]\n        : never;\n      marginBottom: T[\"tokens\"][\"space\"] extends object\n        ? keyof T[\"tokens\"][\"space\"]\n        : never;\n      marginLeft: T[\"tokens\"][\"space\"] extends object\n        ? keyof T[\"tokens\"][\"space\"]\n        : never;\n      marginInline: T[\"tokens\"][\"space\"] extends object\n        ? keyof T[\"tokens\"][\"space\"]\n        : never;\n      marginInlineEnd: T[\"tokens\"][\"space\"] extends object\n        ? keyof T[\"tokens\"][\"space\"]\n        : never;\n      marginInlineStart: T[\"tokens\"][\"space\"] extends object\n        ? keyof T[\"tokens\"][\"space\"]\n        : never;\n      marginBlock: T[\"tokens\"][\"space\"] extends object\n        ? keyof T[\"tokens\"][\"space\"]\n        : never;\n      marginBlockEnd: T[\"tokens\"][\"space\"] extends object\n        ? keyof T[\"tokens\"][\"space\"]\n        : never;\n      marginBlockStart: T[\"tokens\"][\"space\"] extends object\n        ? keyof T[\"tokens\"][\"space\"]\n        : never;\n      padding: T[\"tokens\"][\"space\"] extends object\n        ?\n            | keyof T[\"tokens\"][\"space\"]\n            | [keyof T[\"tokens\"][\"space\"], keyof T[\"tokens\"][\"space\"]]\n            | [\n                keyof T[\"tokens\"][\"space\"],\n                keyof T[\"tokens\"][\"space\"],\n                keyof T[\"tokens\"][\"space\"]\n              ]\n            | [\n                keyof T[\"tokens\"][\"space\"],\n                keyof T[\"tokens\"][\"space\"],\n                keyof T[\"tokens\"][\"space\"],\n                keyof T[\"tokens\"][\"space\"]\n              ]\n        : never;\n      paddingTop: T[\"tokens\"][\"space\"] extends object\n        ? keyof T[\"tokens\"][\"space\"]\n        : never;\n      paddingRight: T[\"tokens\"][\"space\"] extends object\n        ? keyof T[\"tokens\"][\"space\"]\n        : never;\n      paddingBottom: T[\"tokens\"][\"space\"] extends object\n        ? keyof T[\"tokens\"][\"space\"]\n        : never;\n      paddingLeft: T[\"tokens\"][\"space\"] extends object\n        ? keyof T[\"tokens\"][\"space\"]\n        : never;\n      paddingInline: T[\"tokens\"][\"space\"] extends object\n        ? keyof T[\"tokens\"][\"space\"]\n        : never;\n      paddingInlineEnd: T[\"tokens\"][\"space\"] extends object\n        ? keyof T[\"tokens\"][\"space\"]\n        : never;\n      paddingInlineStart: T[\"tokens\"][\"space\"] extends object\n        ? keyof T[\"tokens\"][\"space\"]\n        : never;\n      paddingBlock: T[\"tokens\"][\"space\"] extends object\n        ? keyof T[\"tokens\"][\"space\"]\n        : never;\n      paddingBlockEnd: T[\"tokens\"][\"space\"] extends object\n        ? keyof T[\"tokens\"][\"space\"]\n        : never;\n      paddingBlockStart: T[\"tokens\"][\"space\"] extends object\n        ? keyof T[\"tokens\"][\"space\"]\n        : never;\n      top: T[\"tokens\"][\"space\"] extends object\n        ? keyof T[\"tokens\"][\"space\"]\n        : never;\n      right: T[\"tokens\"][\"space\"] extends object\n        ? keyof T[\"tokens\"][\"space\"]\n        : never;\n      bottom: T[\"tokens\"][\"space\"] extends object\n        ? keyof T[\"tokens\"][\"space\"]\n        : never;\n      left: T[\"tokens\"][\"space\"] extends object\n        ? keyof T[\"tokens\"][\"space\"]\n        : never;\n      fontSize: T[\"tokens\"][\"fontSizes\"] extends object\n        ? keyof T[\"tokens\"][\"fontSizes\"]\n        : never;\n      backgroundColor: T[\"tokens\"][\"colors\"] extends object\n        ? keyof T[\"tokens\"][\"colors\"]\n        : never;\n      border: [\n        LineWidth<(string & {}) | 0>,\n        T[\"tokens\"][\"borderStyles\"] extends object\n          ? keyof T[\"tokens\"][\"borderStyles\"]\n          : LineStyle,\n        T[\"tokens\"][\"colors\"] extends object\n          ? keyof T[\"tokens\"][\"colors\"]\n          : Color\n      ];\n      borderColor: T[\"tokens\"][\"colors\"] extends object\n        ? keyof T[\"tokens\"][\"colors\"]\n        : never;\n      borderTopColor: T[\"tokens\"][\"colors\"] extends object\n        ? keyof T[\"tokens\"][\"colors\"]\n        : never;\n      borderRightColor: T[\"tokens\"][\"colors\"] extends object\n        ? keyof T[\"tokens\"][\"colors\"]\n        : never;\n      borderBottomColor: T[\"tokens\"][\"colors\"] extends object\n        ? keyof T[\"tokens\"][\"colors\"]\n        : never;\n      borderLeftColor: T[\"tokens\"][\"colors\"] extends object\n        ? keyof T[\"tokens\"][\"colors\"]\n        : never;\n      caretColor: T[\"tokens\"][\"colors\"] extends object\n        ? keyof T[\"tokens\"][\"colors\"]\n        : never;\n      color: T[\"tokens\"][\"colors\"] extends object\n        ? keyof T[\"tokens\"][\"colors\"]\n        : never;\n      columnRuleColor: T[\"tokens\"][\"colors\"] extends object\n        ? keyof T[\"tokens\"][\"colors\"]\n        : never;\n      outlineColor: T[\"tokens\"][\"colors\"] extends object\n        ? keyof T[\"tokens\"][\"colors\"]\n        : never;\n      fill: T[\"tokens\"][\"colors\"] extends object\n        ? keyof T[\"tokens\"][\"colors\"]\n        : never;\n      stroke: T[\"tokens\"][\"colors\"] extends object\n        ? keyof T[\"tokens\"][\"colors\"]\n        : never;\n      fontFamily: T[\"tokens\"][\"fonts\"] extends object\n        ? keyof T[\"tokens\"][\"fonts\"]\n        : never;\n      fontWeight: T[\"tokens\"][\"fontWeights\"] extends object\n        ? keyof T[\"tokens\"][\"fontWeights\"]\n        : never;\n      lineHeight: T[\"tokens\"][\"lineHeights\"] extends object\n        ? keyof T[\"tokens\"][\"lineHeights\"]\n        : never;\n      letterSpacing: T[\"tokens\"][\"letterSpacings\"] extends object\n        ? keyof T[\"tokens\"][\"letterSpacings\"]\n        : never;\n      blockSize: T[\"tokens\"][\"sizes\"] extends object\n        ? keyof T[\"tokens\"][\"sizes\"]\n        : never;\n      minBlockSize: T[\"tokens\"][\"sizes\"] extends object\n        ? keyof T[\"tokens\"][\"sizes\"]\n        : never;\n      maxBlockSize: T[\"tokens\"][\"sizes\"] extends object\n        ? keyof T[\"tokens\"][\"sizes\"]\n        : never;\n      inlineSize: T[\"tokens\"][\"sizes\"] extends object\n        ? keyof T[\"tokens\"][\"sizes\"]\n        : never;\n      minInlineSize: T[\"tokens\"][\"sizes\"] extends object\n        ? keyof T[\"tokens\"][\"sizes\"]\n        : never;\n      maxInlineSize: T[\"tokens\"][\"sizes\"] extends object\n        ? keyof T[\"tokens\"][\"sizes\"]\n        : never;\n      width: T[\"tokens\"][\"sizes\"] extends object\n        ? keyof T[\"tokens\"][\"sizes\"]\n        : never;\n      minWidth: T[\"tokens\"][\"sizes\"] extends object\n        ? keyof T[\"tokens\"][\"sizes\"]\n        : never;\n      maxWidth: T[\"tokens\"][\"sizes\"] extends object\n        ? keyof T[\"tokens\"][\"sizes\"]\n        : never;\n      height: T[\"tokens\"][\"sizes\"] extends object\n        ? keyof T[\"tokens\"][\"sizes\"]\n        : never;\n      minHeight: T[\"tokens\"][\"sizes\"] extends object\n        ? keyof T[\"tokens\"][\"sizes\"]\n        : never;\n      maxHeight: T[\"tokens\"][\"sizes\"] extends object\n        ? keyof T[\"tokens\"][\"sizes\"]\n        : never;\n      flexBasis: T[\"tokens\"][\"sizes\"] extends object\n        ? keyof T[\"tokens\"][\"sizes\"]\n        : never;\n      flex:\n        | (T[\"tokens\"][\"space\"] extends object\n            ? keyof T[\"tokens\"][\"space\"]\n            : never)\n        | [\n            number,\n            T[\"tokens\"][\"space\"] extends object\n              ? keyof T[\"tokens\"][\"space\"]\n              : string | number\n          ]\n        | [\n            number,\n            number,\n            T[\"tokens\"][\"sizes\"] extends object\n              ? keyof T[\"tokens\"][\"sizes\"]\n              : string | number\n          ];\n\n      borderWidth: T[\"tokens\"][\"borderWidths\"] extends object\n        ? keyof T[\"tokens\"][\"borderWidths\"]\n        : never;\n      borderTopWidth: T[\"tokens\"][\"borderWidths\"] extends object\n        ? keyof T[\"tokens\"][\"borderWidths\"]\n        : never;\n      borderLeftWidth: T[\"tokens\"][\"borderWidths\"] extends object\n        ? keyof T[\"tokens\"][\"borderWidths\"]\n        : never;\n      borderRightWidth: T[\"tokens\"][\"borderWidths\"] extends object\n        ? keyof T[\"tokens\"][\"borderWidths\"]\n        : never;\n      borderBottomWidth: T[\"tokens\"][\"borderWidths\"] extends object\n        ? keyof T[\"tokens\"][\"borderWidths\"]\n        : never;\n      borderStyle: T[\"tokens\"][\"borderStyles\"] extends object\n        ? keyof T[\"tokens\"][\"borderStyles\"]\n        : never;\n      borderTopStyle: T[\"tokens\"][\"borderStyles\"] extends object\n        ? keyof T[\"tokens\"][\"borderStyles\"]\n        : never;\n      borderRightStyle: T[\"tokens\"][\"borderStyles\"] extends object\n        ? keyof T[\"tokens\"][\"borderStyles\"]\n        : never;\n      borderBottomStyle: T[\"tokens\"][\"borderStyles\"] extends object\n        ? keyof T[\"tokens\"][\"borderStyles\"]\n        : never;\n      borderLeftStyle: T[\"tokens\"][\"borderStyles\"] extends object\n        ? keyof T[\"tokens\"][\"borderStyles\"]\n        : never;\n      borderRadius: T[\"tokens\"][\"radii\"] extends object\n        ? keyof T[\"tokens\"][\"radii\"]\n        : never;\n      borderTopLeftRadius: T[\"tokens\"][\"radii\"] extends object\n        ? keyof T[\"tokens\"][\"radii\"]\n        : never;\n      borderTopRightRadius: T[\"tokens\"][\"radii\"] extends object\n        ? keyof T[\"tokens\"][\"radii\"]\n        : never;\n      borderBottomRightRadius: T[\"tokens\"][\"radii\"] extends object\n        ? keyof T[\"tokens\"][\"radii\"]\n        : never;\n      borderBottomLeftRadius: T[\"tokens\"][\"radii\"] extends object\n        ? keyof T[\"tokens\"][\"radii\"]\n        : never;\n      boxShadow: T[\"tokens\"][\"shadows\"] extends object\n        ? keyof T[\"tokens\"][\"shadows\"]\n        : [\n            string | number,\n            string | number,\n            string | number,\n            T[\"tokens\"][\"colors\"] extends object\n              ? keyof T[\"tokens\"][\"colors\"]\n              : Color\n          ];\n      textShadow: T[\"tokens\"][\"shadows\"] extends object\n        ? keyof T[\"tokens\"][\"shadows\"]\n        : never;\n      zIndex: T[\"tokens\"][\"zIndices\"] extends object\n        ? keyof T[\"tokens\"][\"zIndices\"]\n        : never;\n      transition: T[\"tokens\"][\"transitions\"] extends object\n        ? keyof T[\"tokens\"][\"transitions\"]\n        : never;\n    }\n  : {};\n\nexport interface ITokenDefinition {\n  [key: string]: string;\n  [key: number]: string;\n}\n\nexport interface ITokensDefinition {\n  colors?: ITokenDefinition & { modes?: { [a: string]: ITokenDefinition } };\n  space?: ITokenDefinition;\n  fontSizes?: ITokenDefinition;\n  fonts?: ITokenDefinition;\n  fontWeights?: ITokenDefinition;\n  lineHeights?: ITokenDefinition;\n  letterSpacings?: ITokenDefinition;\n  sizes?: ITokenDefinition;\n  borderWidths?: ITokenDefinition;\n  borderStyles?: ITokenDefinition;\n  radii?: ITokenDefinition;\n  shadows?: ITokenDefinition;\n  zIndices?: ITokenDefinition;\n  transitions?: ITokenDefinition;\n}\nexport interface IUtils {\n  [name: string]: TUtility<any, any>;\n}\n\nexport type TConfig<STRICT_MODE extends boolean = false> = {\n  showFriendlyClassnames?: boolean;\n  prefix?: string;\n  utilityFirst?: boolean;\n} & (STRICT_MODE extends true\n  ? { breakpoints: IBreakpoints; tokens: ITokensDefinition; utils: IUtils }\n  : {\n      breakpoints?: IBreakpoints;\n      tokens?: ITokensDefinition;\n      utils?: IUtils;\n    });\nexport type TUtilityFirstCss<\n  T extends TConfig\n> = T[\"breakpoints\"] extends unknown\n  ? {\n      override?: TRecursiveCss<T>;\n    } & TRecursiveUtils<T>\n  : {\n      override?: TRecursiveCss<T> &\n        {\n          [S in keyof T[\"breakpoints\"]]?: TRecursiveCss<T>;\n        };\n    } & {\n      [S in keyof T[\"breakpoints\"]]?: TRecursiveUtils<T>;\n    } &\n      TRecursiveUtils<T>;\n\nexport type TDefaultCss<T extends TConfig> = T[\"breakpoints\"] extends object\n  ? TRecursiveCss<T> &\n      TRecursiveUtils<T> &\n      {\n        [S in keyof T[\"breakpoints\"]]?: TRecursiveCss<T> & TRecursiveUtils<T>;\n      }\n  : TRecursiveCss<T> & TRecursiveUtils<T>;\n\nexport interface TCss<T extends TConfig> {\n  (\n    ...styles: (\n      | (T extends { utilityFirst: true }\n          ? TUtilityFirstCss<T>\n          : TDefaultCss<T>)\n      | string\n      | boolean\n      | null\n      | undefined\n    )[]\n  ): string;\n  getStyles: (\n    callback: () => any\n  ) => {\n    styles: string[];\n    result: any;\n  };\n  keyframes: (\n    definition: Record<string, TFlatCSS<T> & TFlatUtils<T>>\n  ) => string;\n  global: (\n    definition: Record<\n      string,\n      T extends { utilityFirst: true } ? TUtilityFirstCss<T> : TDefaultCss<T>\n    >\n  ) => string;\n  theme: (\n    colors: Partial<\n      T extends { tokens: { colors: {} } }\n        ? { [k in keyof T[\"tokens\"][\"colors\"]]: string }\n        : {}\n    >\n  ) => string;\n}\n\nexport interface ISheet {\n  cssRules: any[];\n  content: string;\n  insertRule(rule: string, index?: number): void;\n}\n"]}