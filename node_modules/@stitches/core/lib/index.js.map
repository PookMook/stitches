{"version":3,"file":"index.js","sourceRoot":"","sources":["../src/index.ts"],"names":[],"mappings":"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","sourcesContent":["import { tokenTypes } from \"./constants\";\nimport {\n  ATOM,\n  IAtom,\n  IBreakpoints,\n  IComposedAtom,\n  ICssPropToToken,\n  IKeyframesAtom,\n  ISheet,\n  IThemeAtom,\n  ITokensDefinition,\n  TConfig,\n  TCss,\n} from \"./types\";\nimport { unitlessKeys } from \"./unitless\";\nimport {\n  MAIN_BREAKPOINT_ID,\n  createSheets,\n  cssPropToToken,\n  getVendorPrefixAndProps,\n  hashString,\n  specificityProps,\n} from \"./utils\";\n\nexport * from \"./types\";\nexport * from \"./css-types\";\nexport * from \"./utils\";\n\nexport const hotReloadingCache = new Map<string, any>();\n\nconst createSelector = (className: string, selector: string) => {\n  const cssRuleClassName = className ? `.${className}` : \"\";\n  if (selector && selector.includes(\"&\"))\n    return selector.replace(/&/gi, cssRuleClassName);\n  if (selector) {\n    return `${cssRuleClassName}${selector}`;\n  }\n  return cssRuleClassName;\n};\n\n/**\n * Resolves a token to its css value in the context of the passed css prop:\n */\nconst resolveTokens = (cssProp: string, value: any, tokens: any) => {\n  const token: any = cssPropToToken[cssProp as keyof ICssPropToToken<any>];\n  let tokenValue: any;\n  if (token) {\n    if (Array.isArray(token) && Array.isArray(value)) {\n      tokenValue = token.map((tokenName, index) =>\n        token &&\n        (tokens as any)[tokenName] &&\n        (tokens as any)[tokenName][value[index]]\n          ? (tokens as any)[tokenName][value[index]]\n          : value[index]\n      );\n    } else {\n      tokenValue =\n        token && (tokens as any)[token] && (tokens as any)[token][value]\n          ? (tokens as any)[token][value]\n          : value;\n    }\n  } else {\n    tokenValue = value;\n  }\n  return tokenValue;\n};\n\n/**\n * iterates over a style object keys and values,\n * resolving them to their final form then calls the value callback with the prop, value\n * and the current value nesting path in the style object:\n * - handles utilities\n * - handles specificity props\n * - handles nesting\n * - TODO: also handle the things below once we handle envs differently (to avoid passing a lot of props around):\n * - handles tokens\n * - handles vendor prefixing\n */\nconst processStyleObject = (\n  obj: any,\n  config: TConfig<true>,\n  valueMiddleware: (\n    prop: string,\n    value: string,\n    currentNestingPath: string[]\n  ) => void,\n  currentNestingPath: string[] = [],\n  shouldHandleUtils = true,\n  shouldHandleSpecificityProps = true\n) => {\n  // key: css prop or override or a selector\n  // value is: cssValue, a util, specificity prop, or\n  for (const key of Object.keys(obj)) {\n    const val = obj[key];\n    const isUtilProp = shouldHandleUtils && key in config.utils;\n    const isSpecificityProp =\n      shouldHandleSpecificityProps && !isUtilProp && key in specificityProps;\n    /** Nested styles: */\n    if (typeof val === \"object\" && !isSpecificityProp && !isUtilProp) {\n      // Atom value:\n      if (val[ATOM]) {\n        valueMiddleware(key, val, currentNestingPath);\n        continue;\n      }\n      // handle the value object\n      processStyleObject(val, config, valueMiddleware, [\n        ...currentNestingPath,\n        key,\n      ]);\n      continue;\n    }\n\n    /** Utils: */\n    if (isUtilProp) {\n      // Resolve the util from the util function:\n      const resolvedUtils = config.utils[key](config)(val);\n      processStyleObject(\n        resolvedUtils,\n        config,\n        valueMiddleware,\n        [...currentNestingPath],\n        false\n      );\n      continue;\n    }\n\n    /** Specificity Props: */\n    // shorthand css props or css props that has baked in handling:\n    // see specificityProps in ./utils\n    if (isSpecificityProp) {\n      const resolvedSpecificityProps = specificityProps[key](\n        config.tokens,\n        val\n      );\n      processStyleObject(\n        resolvedSpecificityProps,\n        config,\n        valueMiddleware,\n        [...currentNestingPath],\n        false,\n        false\n      );\n      continue;\n    }\n    if (typeof val === \"number\") {\n      // handle unitless numbers:\n      valueMiddleware(\n        key,\n        // tslint:disable-next-line: prefer-template\n        `${unitlessKeys[key] ? val : val + \"px\"}`,\n        currentNestingPath\n      );\n    } else if (val !== undefined) {\n      valueMiddleware(\n        key,\n        resolveTokens(key, val, config.tokens),\n        currentNestingPath\n      );\n    }\n  }\n};\n\n/**\n * Resolves a css prop nesting path to a css selector and the breakpoint the css prop is meant to be injected to\n */\nconst resolveBreakpointAndSelectorAndInlineMedia = (\n  nestingPath: string[],\n  config: TConfig<true>\n) =>\n  nestingPath.reduce(\n    (acc, breakpointOrSelector, i) => {\n      // utilityFirst selector specific resolution:\n      const isOverride =\n        config.utilityFirst && breakpointOrSelector === \"override\";\n      if (isOverride) {\n        // any level above 0\n        if (i) {\n          throw new Error(\n            `@stitches/core - You can not override at this level [${nestingPath\n              .slice(0, i - 1)\n              .join(\n                \", \"\n              )}, -> ${breakpointOrSelector}], only at the top level definition`\n          );\n        }\n        return acc;\n      }\n      // breakpoints handling:\n      if (\n        breakpointOrSelector in config.breakpoints ||\n        breakpointOrSelector === MAIN_BREAKPOINT_ID\n      ) {\n        if (acc.breakpoint !== MAIN_BREAKPOINT_ID) {\n          throw new Error(\n            `@stitches/core - You are nesting the breakpoint \"${breakpointOrSelector}\" into \"${acc.breakpoint}\", that makes no sense? :-)`\n          );\n        }\n        acc.breakpoint = breakpointOrSelector;\n        return acc;\n      }\n\n      if (breakpointOrSelector[0] === \"@\") {\n        acc.inlineMediaQueries.push(breakpointOrSelector);\n        return acc;\n      }\n      // Normal css nesting selector:\n      acc.nestingPath =\n        acc.nestingPath +\n        // If you manually prefix with '&' we remove it for identity consistency\n        // only for pseudo selectors and nothing else\n        (breakpointOrSelector[0] === \"&\" && breakpointOrSelector[1] === \":\"\n          ? breakpointOrSelector.substr(1)\n          : // pseudo elements/class\n          // don't prepend with a whitespace\n          breakpointOrSelector[0] === \":\"\n          ? breakpointOrSelector\n          : // else just nest with a space\n            // tslint:disable-next-line: prefer-template\n            \" \" + breakpointOrSelector);\n      return acc;\n    },\n    {\n      breakpoint: MAIN_BREAKPOINT_ID,\n      nestingPath: \"\",\n      inlineMediaQueries: [] as string[],\n    }\n  );\n\n/**\n * converts an object style css prop to its normal css style object prop and handles prefixing:\n * borderColor => border-color\n */\nconst hyphenAndVendorPrefixCssProp = (\n  cssProp: string,\n  vendorProps: any[],\n  vendorPrefix: string\n) => {\n  const isVendorPrefixed = cssProp[0] === cssProp[0].toUpperCase();\n  let cssHyphenProp = cssProp\n    .split(/(?=[A-Z])/)\n    .map((g) => g.toLowerCase())\n    .join(\"-\");\n\n  if (isVendorPrefixed) {\n    cssHyphenProp = `-${cssHyphenProp}`;\n  } else if (vendorProps.includes(`${vendorPrefix}${cssHyphenProp}`)) {\n    cssHyphenProp = `${vendorPrefix}${cssHyphenProp}`;\n  }\n  return cssHyphenProp;\n};\n\nconst toStringCachedAtom = function (this: IAtom) {\n  return this._className!;\n};\n\nconst toStringCompose = function (this: IComposedAtom) {\n  const className = this.atoms.map((atom) => atom.toString()).join(\" \");\n  // cache the className on this instance\n  // @ts-ignore\n  this._className = className;\n  // @ts-ignore\n  this.toString = toStringCachedAtom;\n  return className;\n};\n\nconst createCssRule = (\n  breakpoints: IBreakpoints,\n  atom: IAtom,\n  className: string\n) => {\n  let cssRule = \"\";\n  if (atom.inlineMediaQueries && atom.inlineMediaQueries.length) {\n    let allMediaQueries = \"\";\n    let endBrackets = \"\";\n    atom.inlineMediaQueries.forEach((breakpoint) => {\n      allMediaQueries += `${breakpoint}{`;\n      endBrackets += \"}\";\n    });\n\n    cssRule = `${allMediaQueries}${createSelector(className, atom.selector)}{${\n      atom.cssHyphenProp\n    }:${atom.value};}${endBrackets}`;\n  } else {\n    cssRule = `${createSelector(className, atom.selector)}{${\n      atom.cssHyphenProp\n    }:${atom.value};}`;\n  }\n\n  return atom.breakpoint !== MAIN_BREAKPOINT_ID\n    ? breakpoints[atom.breakpoint](cssRule)\n    : cssRule;\n};\n\nconst createToString = (\n  sheets: { [breakpoint: string]: ISheet },\n  breakpoints: IBreakpoints = {},\n  cssClassnameProvider: (atom: IAtom) => string, // [className, pseudo]\n  preInjectedRules: Set<string>\n) => {\n  return function toString(this: IAtom) {\n    const className = cssClassnameProvider(this);\n    const shouldInject =\n      !preInjectedRules.size || !preInjectedRules.has(`.${className}`);\n\n    if (shouldInject) {\n      sheets[this.breakpoint].insertRule(\n        createCssRule(breakpoints, this, className)\n      );\n    }\n\n    // We are switching this atom from IAtom simpler representation\n    // 1. delete everything but `id` for specificity check\n\n    // @ts-ignore\n    this.cssHyphenProp = this.value = this.pseudo = this.breakpoint = this.inlineMediaQueries = undefined;\n\n    // 2. put on a _className\n    this._className = className;\n\n    // 3. switch from this `toString` to a much simpler one\n    this.toString = toStringCachedAtom;\n\n    return className;\n  };\n};\n\nconst createServerToString = (\n  sheets: { [mediaQuery: string]: ISheet },\n  breakpoints: IBreakpoints = {},\n  cssClassnameProvider: (atom: IAtom) => string\n) => {\n  return function toString(this: IAtom) {\n    const className = cssClassnameProvider(this);\n\n    sheets[this.breakpoint].insertRule(\n      createCssRule(\n        breakpoints,\n        this,\n        className ? `/*X*/${className}/*X*/` : \"\"\n      )\n    );\n\n    // We do not clean out the atom here, cause it will be reused\n    // to inject multiple times for each request\n\n    // 1. put on a _className\n    this._className = className;\n\n    // 2. switch from this `toString` to a much simpler one\n    this.toString = toStringCachedAtom;\n\n    return className;\n  };\n};\n\nconst createThemeToString = (classPrefix: string, variablesSheet: ISheet) =>\n  function toString(this: IThemeAtom) {\n    const themeClassName = `${classPrefix ? `${classPrefix}-` : \"\"}theme-${\n      this.name\n    }`;\n\n    // @ts-ignore\n    variablesSheet.insertRule(\n      `.${themeClassName}{${Object.keys(this.definition).reduce(\n        (subAggr, tokenKey) => {\n          // format token to remove special characters\n          // https://stackoverflow.com/a/4374890\n          const formattedTokenKey = tokenKey.replace(/[^\\w\\s-]/gi, \"\");\n          // @ts-ignore\n          return `${subAggr}--colors-${formattedTokenKey}:${this.definition[tokenKey]};`;\n        },\n        \"\"\n      )}`\n    );\n\n    this.toString = () => themeClassName;\n\n    return themeClassName;\n  };\n\nconst createKeyframesToString = (sheet: ISheet) =>\n  function toString(this: IKeyframesAtom) {\n    if (this._cssRuleString) {\n      sheet.insertRule(this._cssRuleString);\n    }\n\n    this.toString = () => this.id;\n\n    return this.id;\n  };\n\nconst composeIntoMap = (\n  map: Map<string, IAtom>,\n  atoms: (IAtom | IComposedAtom)[]\n) => {\n  let i = atoms.length - 1;\n  for (; i >= 0; i--) {\n    const item = atoms[i];\n    // atoms can be undefined, null, false or '' using ternary like\n    // expressions with the properties\n    if (item && item[ATOM] && \"atoms\" in item) {\n      composeIntoMap(map, item.atoms);\n    } else if (item && item[ATOM]) {\n      if (!map.has((item as IAtom).id)) {\n        map.set((item as IAtom).id, item as IAtom);\n      }\n    } else if (item) {\n      map.set((item as unknown) as string, item as IAtom);\n    }\n  }\n};\n\nexport const createTokens = <T extends ITokensDefinition>(tokens: T) => {\n  return tokens;\n};\nexport const createCss = <T extends TConfig>(\n  _config: T,\n  env: Window | null = typeof window === \"undefined\" ? null : window\n): TCss<T> => {\n  // pre-checked config to avoid checking these all the time\n  // tslint:disable-next-line\n  const config: TConfig<true> = Object.assign(\n    { tokens: {}, utils: {}, breakpoints: {} },\n    _config\n  );\n  // prefill with empty token groups\n  tokenTypes.forEach(\n    (tokenType) => (config.tokens[tokenType] = config.tokens[tokenType] || {})\n  );\n  const { tokens, breakpoints } = config;\n\n  const showFriendlyClassnames =\n    typeof config.showFriendlyClassnames === \"boolean\"\n      ? config.showFriendlyClassnames\n      : process.env.NODE_ENV === \"development\";\n  const prefix = config.prefix || \"\";\n  const { vendorPrefix, vendorProps } = env\n    ? getVendorPrefixAndProps(env)\n    : { vendorPrefix: \"-node-\", vendorProps: [] };\n\n  if (env && hotReloadingCache.has(prefix)) {\n    const instance = hotReloadingCache.get(prefix);\n    instance.dispose();\n  }\n\n  // pre-compute class prefix\n  const classPrefix = prefix\n    ? showFriendlyClassnames\n      ? `${prefix}_`\n      : prefix\n    : \"\";\n  const cssClassnameProvider = (atom: IAtom): string => {\n    if (atom._isGlobal) {\n      return \"\";\n    }\n    const hash = hashString(\n      `${atom.breakpoint || \"\"}${atom.cssHyphenProp.replace(\n        /-(moz|webkit|ms)-/,\n        \"\"\n      )}${atom.selector || \"\"}${atom.inlineMediaQueries?.join(\"\") || \"\"}${\n        atom.value\n      }`\n    );\n    const name = showFriendlyClassnames\n      ? `${atom.breakpoint ? `${atom.breakpoint}_` : \"\"}${atom.cssHyphenProp\n          .replace(/-(moz|webkit|ms)-/, \"\")\n          .split(\"-\")\n          .map((part) => part[0])\n          .join(\"\")}_${hash}`\n      : `_${hash}`;\n\n    return `${classPrefix}${name}`;\n  };\n\n  const { tags, sheets } = createSheets(env, config.breakpoints);\n  const preInjectedRules = new Set<string>();\n  // tslint:disable-next-line\n  for (const tag of tags) {\n    ((tag.textContent || \"\").match(/\\/\\*\\X\\*\\/.*?\\/\\*\\X\\*\\//g) || []).forEach(\n      (rule) => {\n        // tslint:disable-next-line\n        preInjectedRules.add(\".\" + rule.replace(/\\/\\*X\\*\\//g, \"\"));\n      }\n    );\n  }\n\n  let toString = env\n    ? createToString(\n        sheets,\n        config.breakpoints,\n        cssClassnameProvider,\n        preInjectedRules\n      )\n    : createServerToString(sheets, config.breakpoints, cssClassnameProvider);\n\n  let themeToString = createThemeToString(classPrefix, sheets.__variables__);\n  let keyframesToString = createKeyframesToString(sheets[MAIN_BREAKPOINT_ID]);\n  const compose = (...atoms: IAtom[]): IComposedAtom => {\n    const map = new Map<string, IAtom>();\n    composeIntoMap(map, atoms);\n    return {\n      atoms: Array.from(map.values()),\n      toString: toStringCompose,\n      [ATOM]: true,\n    };\n  };\n  const createAtom = (\n    cssProp: string,\n    value: any,\n    breakpoint = MAIN_BREAKPOINT_ID,\n    selectorString: string,\n    inlineMediaQueries: string[],\n    isGlobal?: boolean\n  ) => {\n    // generate id used for specificity check\n    // two atoms are considered equal in regard to there specificity if the id is equal\n    const inlineMediasAsString = inlineMediaQueries\n      ? inlineMediaQueries.join(\"\")\n      : \"\";\n    const id =\n      cssProp.toLowerCase() +\n      selectorString +\n      (inlineMediaQueries ? inlineMediaQueries.join(\"\") : \"\") +\n      breakpoint;\n\n    // make a uid accouting for different values\n    const uid = id + value;\n\n    // If this was created before return the cached atom\n    if (atomCache.has(uid)) {\n      // check if this has a breakpoint based media query\n      if (\n        inlineMediasAsString.match(/@media.*\\((min|max)?.*(width|height).*\\)/)\n      ) {\n        // tslint:disable-next-line\n        console.warn(\n          `The property \"${cssProp}\" with media query ${inlineMediasAsString} can cause a specificity issue. You should create a breakpoint`\n        );\n      }\n      return atomCache.get(uid)!;\n    }\n\n    // prepare the cssProp\n    const cssHyphenProp = hyphenAndVendorPrefixCssProp(\n      cssProp,\n      vendorProps,\n      vendorPrefix\n    );\n\n    // We want certain pseudo selectors to take presedence over other pseudo\n    // selectors, so we increase specificity\n    if (!selectorString?.match(\"&\")) {\n      if (selectorString?.match(/\\:hover/)) {\n        selectorString = `&&${selectorString}`;\n      } else if (selectorString?.match(/\\:active/)) {\n        selectorString = `&&&${selectorString}`;\n      } else if (selectorString?.match(/\\:focus|\\:focus-visible/)) {\n        selectorString = `&&&&${selectorString}`;\n      } else if (selectorString?.match(/\\:read-only/)) {\n        selectorString = `&&&&&${selectorString}`;\n      } else if (selectorString?.match(/\\:disabled/)) {\n        selectorString = `&&&&&&${selectorString}`;\n      }\n    }\n\n    // Create a new atom\n    const atom: IAtom = {\n      id,\n      cssHyphenProp,\n      value,\n      selector: selectorString,\n      inlineMediaQueries,\n      breakpoint,\n      toString,\n      [ATOM]: true,\n      _isGlobal: isGlobal,\n    };\n\n    // Cache it\n    atomCache.set(uid, atom);\n\n    return atom;\n  };\n\n  let baseTokens = \":root{\";\n  // tslint:disable-next-line\n  for (const tokenType in tokens) {\n    const isNumericScale = tokenType.match(\n      /^(sizes|space|letterSpacings|zIndices)$/\n    );\n    // @ts-ignore\n    // tslint:disable-next-line\n    const scaleTokenKeys = Object.keys(tokens[tokenType]);\n    for (let index = 0; index < scaleTokenKeys.length; index++) {\n      const token = scaleTokenKeys[index];\n      // format token to remove special characters\n      // https://stackoverflow.com/a/4374890\n      const formattedToken = token.replace(/[^\\w\\s-]/gi, \"\");\n      const cssVar = `--${tokenType}-${formattedToken}`;\n\n      // @ts-ignore\n      baseTokens += `${cssVar}:${tokens[tokenType][token]};`;\n\n      // @ts-ignore\n      tokens[tokenType][token] = `var(${cssVar})`;\n\n      // Add negative tokens\n      // tslint:disable-next-line: prefer-template\n      const negativeTokenKey = \"-\" + token;\n      // check that it's a numericScale and that the user didn't already set a negative token witht this name\n      const isAlreadyANegativeToken =\n        // @ts-ignore\n        token[0] === \"-\" ? !!tokens[tokenType][token.substring(1)] : false;\n      if (\n        isNumericScale &&\n        // @ts-ignore\n        !tokens[tokenType][negativeTokenKey] &&\n        !isAlreadyANegativeToken\n      ) {\n        // @ts-ignore\n        tokens[tokenType][negativeTokenKey] = `calc(var(${cssVar}) * -1)`;\n      }\n    }\n  }\n  baseTokens += \"}\";\n\n  if (!preInjectedRules.has(\":root\")) {\n    sheets.__variables__.insertRule(baseTokens);\n  }\n  // Keeping track of all atoms for SSR\n  const compositionsCache = new Set<IComposedAtom>();\n  const atomCache = new Map<string, IAtom>();\n  const keyFramesCache = new Map<string, IKeyframesAtom>();\n  const themeCache = new Map<ITokensDefinition, IThemeAtom>();\n  const cssInstance = ((...definitions: any[]) => {\n    const args: any[] = [];\n    let index = 0;\n\n    for (let x = 0; x < definitions.length; x++) {\n      if (!definitions[x]) {\n        continue;\n      }\n      if (typeof definitions[x] === \"string\" || definitions[x][ATOM]) {\n        args[index++] = definitions[x];\n      } else {\n        processStyleObject(definitions[x], config, (prop, value, path) => {\n          const {\n            nestingPath,\n            breakpoint,\n            inlineMediaQueries,\n          } = resolveBreakpointAndSelectorAndInlineMedia(path, config);\n          args[index++] = createAtom(\n            prop,\n            value,\n            breakpoint,\n            nestingPath,\n            inlineMediaQueries\n          );\n        });\n      }\n    }\n    // might cause memory leaks when doing css() inside a component\n    // but we need this for now to fix SSR\n    const composition = compose(...args);\n    compositionsCache.add(composition);\n\n    return composition;\n  }) as any;\n\n  cssInstance.dispose = () => {\n    atomCache.clear();\n    tags.forEach((tag) => {\n      tag.parentNode?.removeChild(tag);\n    });\n  };\n  cssInstance._config = () => config;\n  cssInstance.theme = (definition: any): IThemeAtom => {\n    if (themeCache.has(definition)) {\n      return themeCache.get(definition)!;\n    }\n    const themeAtom = {\n      // We could here also check if theme has been added from server,\n      // though thinking it does not matter... just a simple rule\n      name: String(themeCache.size),\n      // wrapping the colors in an object so that the structure matches\n      // the tokens property in the config\n      definition,\n      toString: themeToString,\n      [ATOM]: true as true,\n    };\n\n    themeCache.set(definition, themeAtom);\n\n    return themeAtom;\n  };\n\n  cssInstance.global = (definitions: any) => {\n    processStyleObject(definitions, config, (prop, value, path) => {\n      const {\n        nestingPath,\n        breakpoint,\n        inlineMediaQueries,\n      } = resolveBreakpointAndSelectorAndInlineMedia(path, config);\n      if (!nestingPath.length) {\n        throw new Error(\"Global styles need to be nested\");\n      }\n      // Create a global atom and call toString() on it directly to inject it\n      // as global atoms don't generate class names of their own\n      createAtom(\n        prop,\n        value,\n        breakpoint,\n        nestingPath,\n        inlineMediaQueries,\n        true\n      ).toString();\n    });\n  };\n  cssInstance.keyframes = (definition: any): IKeyframesAtom => {\n    let cssRule = \"\";\n    let currentTimeProp = \"\";\n    processStyleObject(definition, config, (key, value, [timeProp]) => {\n      if (timeProp !== currentTimeProp) {\n        if (cssRule) {\n          cssRule += `}`;\n        }\n        currentTimeProp = timeProp;\n        cssRule += `${timeProp} {`;\n      }\n      cssRule += `${hyphenAndVendorPrefixCssProp(\n        key,\n        vendorProps,\n        vendorPrefix\n      )}: ${resolveTokens(key, value, tokens)};`;\n    });\n\n    const hash = hashString(cssRule);\n    // Check if an atom exist with the same hash and return it if so\n    const cachedAtom = keyFramesCache.get(hash);\n    if (cachedAtom) {\n      return cachedAtom;\n    }\n    // wrap it with the generated keyframes name\n    cssRule = `@keyframes ${hash} {${cssRule}}`;\n    const keyframesAtom = {\n      id: String(hash),\n      _cssRuleString: cssRule,\n      toString: keyframesToString,\n      [ATOM]: true as true,\n    };\n    keyFramesCache.set(hash, keyframesAtom);\n    return keyframesAtom;\n  };\n\n  cssInstance.getStyles = (cb: any) => {\n    // Reset the composition to avoid ssr issues\n    compositionsCache.forEach((composition) => {\n      composition.toString = toStringCompose;\n    });\n    // tslint:disable-next-line\n    for (let sheet in sheets) {\n      sheets[sheet].cssRules.length = 0;\n    }\n    if (baseTokens) {\n      sheets.__variables__.insertRule(baseTokens);\n    }\n\n    // We have to reset our toStrings so that they will now inject again,\n    // and still cache is it is being reused\n    toString = createServerToString(\n      sheets,\n      config.breakpoints,\n      cssClassnameProvider\n    );\n    keyframesToString = createKeyframesToString(sheets[MAIN_BREAKPOINT_ID]);\n    themeToString = createThemeToString(classPrefix, sheets.__variables__);\n\n    atomCache.forEach((atom) => {\n      atom.toString = toString;\n    });\n\n    keyFramesCache.forEach((atom) => {\n      atom.toString = keyframesToString;\n    });\n\n    themeCache.forEach((atom) => {\n      atom.toString = themeToString;\n    });\n\n    const result = cb();\n\n    return {\n      result,\n      styles: Object.keys(breakpoints).reduce(\n        (aggr, key) => {\n          return aggr.concat(\n            `/* STITCHES:${key} */\\n${sheets[key].cssRules.join(\"\\n\")}`\n          );\n        },\n        [\n          `/* STITCHES:__variables__ */\\n${sheets.__variables__.cssRules.join(\n            \"\\n\"\n          )}`,\n          `/* STITCHES */\\n${sheets[MAIN_BREAKPOINT_ID].cssRules.join(\"\\n\")}`,\n        ]\n      ),\n    };\n  };\n\n  if (env) {\n    hotReloadingCache.set(prefix, cssInstance);\n  }\n\n  return cssInstance;\n};\n"]}